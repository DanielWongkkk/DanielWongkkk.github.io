<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://danielwongkkk.github.io</id>
    <title>Gridea</title>
    <updated>2020-03-15T14:38:02.020Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://danielwongkkk.github.io"/>
    <link rel="self" href="https://danielwongkkk.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://danielwongkkk.github.io/images/avatar.png</logo>
    <icon>https://danielwongkkk.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[CSS常见选择器功能及其权重]]></title>
        <id>https://danielwongkkk.github.io/post/L8Reb8XWB/</id>
        <link href="https://danielwongkkk.github.io/post/L8Reb8XWB/">
        </link>
        <updated>2020-03-15T14:26:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="类选择器与id选择器">类选择器与id选择器</h3>
<ul>
<li>id选择器和类选择器最大的不同在于使用次数上，就像身份证号与姓名</li>
<li>类选择器我们在修改样式中，用的最多。</li>
<li>id选择器一般用于页面唯一性的元素身上，经常和javascript 搭配使用。</li>
</ul>
<h3 id="子元素选择器">子元素选择器</h3>
<ul>
<li>作用：子元素选择器只能选择作为某元素子元素(亲儿子)的元素。</li>
<li>其写法就是把父级标签写在前面，子级标签写在后面，中间跟一个 <code>&gt;</code> 进行连接</li>
</ul>
<blockquote>
<p>这里的子 指的是 亲儿子  不包含孙子 重孙子之类。</p>
</blockquote>
<pre><code class="language-css">.class&gt;p{color:red;font-size:14px;}
</code></pre>
<h3 id="并集选择器">并集选择器</h3>
<ul>
<li>并集选择器通常用于集体声明，逗号隔开的，所有选择器都会执行后面样式，逗号可以理解为和的意思。</li>
<li>如果某些选择器定义的相同样式，就可以利用并集选择器，可以让代码更简洁。</li>
</ul>
<h3 id="链接伪类选择器">链接伪类选择器</h3>
<p>作用：用于给链接添加特殊效果</p>
<pre><code class="language-css">a:link      /* 未访问的链接 */
a:visited   /* 已访问的链接 */
a:hover     /* 鼠标移动到链接上 */
a:active    /* 选定的链接 */
</code></pre>
<p><strong>注意</strong></p>
<ul>
<li>写的时候，他们的顺序尽量不要颠倒  按照  lvha 的顺序。否则可能引起错误。</li>
<li>因为a链接浏览器具有默认样式，所以我们实际工作中都需要给链接单独指定样式。</li>
<li>实际工作开发中，我们很少写全四个状态，一般我们写法如下：<br>
一般只写hover的链接状态</li>
</ul>
<pre><code class="language-css">a {   /* a是标签选择器  所有的链接 */
			font-weight: 700;
			font-size: 16px;
			color: gray;
}
a:hover {   /* :hover 是链接伪类选择器 鼠标经过 */
			color: red; /*  鼠标经过的时候，由原来的 灰色 变成了红色 */
}
</code></pre>
<h3 id="选择器总结">选择器总结</h3>
<table>
<thead>
<tr>
<th>选择器</th>
<th>作用</th>
<th>特征</th>
<th>使用情况</th>
<th>隔开符号及用法</th>
</tr>
</thead>
<tbody>
<tr>
<td>后代选择器</td>
<td>用来选择元素后代</td>
<td>是选择所有的子孙后代</td>
<td>较多</td>
<td>符号是<strong>空格</strong> .nav a</td>
</tr>
<tr>
<td>子代选择器</td>
<td>选择 最近一级元素</td>
<td>只选亲儿子</td>
<td>较少</td>
<td>符号是**&gt;**   .nav&gt;p</td>
</tr>
<tr>
<td>交集选择器</td>
<td>选择两个标签交集的部分</td>
<td>既是 又是</td>
<td>较少</td>
<td><strong>没有符号</strong>  p.one</td>
</tr>
<tr>
<td>并集选择器</td>
<td>选择某些相同样式的选择器</td>
<td>可以用于集体声明</td>
<td>较多</td>
<td>符号是<strong>逗号</strong> .nav, .header</td>
</tr>
<tr>
<td>链接伪类选择器</td>
<td>给链接更改状态</td>
<td></td>
<td>较多</td>
<td>重点记住 a{} 和 a:hover  实际开发的写法</td>
</tr>
</tbody>
</table>
<h3 id="css3选择器">CSS3选择器</h3>
<h4 id="属性选择器">属性选择器</h4>
<table>
<thead>
<tr>
<th style="text-align:center">选择符</th>
<th style="text-align:center">简介</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">E[att]</td>
<td style="text-align:center">选择具有att属性的E元素</td>
</tr>
<tr>
<td style="text-align:center">E[att=‘val’]</td>
<td style="text-align:center">选择具有att属性，且属性值等于val的E元素</td>
</tr>
<tr>
<td style="text-align:center">E[att^=‘val’]</td>
<td style="text-align:center">选择具有att属性，且属性值以val开头的E元素</td>
</tr>
<tr>
<td style="text-align:center">E[att$=‘val’]</td>
<td style="text-align:center">选择具有att属性，且属性值以val结尾的E元素</td>
</tr>
<tr>
<td style="text-align:center">E[att*=‘val’]</td>
<td style="text-align:center">选择具有att属性，且属性值含有val的E元素</td>
</tr>
</tbody>
</table>
<h3 id="结构伪类选择器">结构伪类选择器</h3>
<table>
<thead>
<tr>
<th style="text-align:center">选择符</th>
<th style="text-align:center">简介</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">E:first-child</td>
<td style="text-align:center">选择父元素中的第一个子元素E</td>
</tr>
<tr>
<td style="text-align:center">E:last-child</td>
<td style="text-align:center">选择父元素中的最后一个子元素E</td>
</tr>
<tr>
<td style="text-align:center">E:nth-child(n)</td>
<td style="text-align:center">选择父元素中的第n个子元素E</td>
</tr>
<tr>
<td style="text-align:center">E:first-of-type</td>
<td style="text-align:center">选择指定类型E第一个</td>
</tr>
<tr>
<td style="text-align:center">E:last-of-type</td>
<td style="text-align:center">选择指定类型E最后一个</td>
</tr>
<tr>
<td style="text-align:center">E:nth-of-type(n)</td>
<td style="text-align:center">选择指定类型E第n个</td>
</tr>
</tbody>
</table>
<p>nth-child(n)注意点：</p>
<ul>
<li>
<p>n 可以是数字、关键字、公式</p>
</li>
<li>
<p>n 如果是数字，就是选中第几个</p>
</li>
<li>
<p>常见的关键字有 <code>even</code> 偶数、<code>odd</code> 奇数</p>
</li>
<li>
<p>常见的公式如下(如果 n 是公式，则从 0 开始计算)</p>
</li>
<li>
<p>但是第 0 个元素或者超出了元素的个数会被忽略</p>
<table>
<thead>
<tr>
<th style="text-align:center">公式</th>
<th style="text-align:center">取值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">2n</td>
<td style="text-align:center">偶数</td>
</tr>
<tr>
<td style="text-align:center">2n+1</td>
<td style="text-align:center">奇数</td>
</tr>
<tr>
<td style="text-align:center">5n</td>
<td style="text-align:center">5，10，15...</td>
</tr>
<tr>
<td style="text-align:center">n+5</td>
<td style="text-align:center">从第5个开始到最后</td>
</tr>
<tr>
<td style="text-align:center">-n+5</td>
<td style="text-align:center">前5个</td>
</tr>
</tbody>
</table>
<p>nth-child和nth-of-type的区别</p>
</li>
<li>
<p><code>nth-child</code>  选择父元素里面的第几个子元素，<strong>不管是第几个类型</strong></p>
</li>
<li>
<p><code>nt-of-type</code>  选择指定类型的元素</p>
</li>
</ul>
<h4 id="伪元素选择器">伪元素选择器</h4>
<table>
<thead>
<tr>
<th style="text-align:center">选择符</th>
<th style="text-align:center">简介</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">::before</td>
<td style="text-align:center">在元素内部的前面插入内容</td>
</tr>
<tr>
<td style="text-align:center">::after</td>
<td style="text-align:center">在元素内部的后面插入内容</td>
</tr>
</tbody>
</table>
<p>伪类选择器注意事项</p>
<ul>
<li><code>before</code> 和 <code>after</code> 必须有 <code>content</code> 属性</li>
<li><code>before</code> 在内容前面，<code>after</code> 在内容后面</li>
<li><code>before</code> 和 <code>after</code> 创建的是一个元素，但是属于行内元素</li>
<li>创建出来的元素在 <code>Dom</code> 中查找不到，所以称为伪元素</li>
<li>伪元素和标签选择器一样，权重为 1</li>
</ul>
<p>伪元素实际案例-添加字体图标</p>
<pre><code class="language-css">p {
   width: 220px;
   height: 22px;
   border: 1px solid lightseagreen;
   margin: 60px;
   position: relative;
}
p::after {
  content: '\ea50';
  font-family: 'icomoon';
  position: absolute;
  top: -1px;
  right: 10px;
}
</code></pre>
<h3 id="权重计算规则">权重计算规则</h3>
<ul>
<li>第一等：代表内联样式，如: style=” ”，权值为1000。</li>
<li>第二等：代表ID选择器，如：#content，权值为0100。</li>
<li>第三等：代表类，伪类和属性选择器，如.content，权值为0010。</li>
<li>第四等：代表类型选择器和伪元素选择器，如div p，权值为0001。</li>
<li>通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值为0000。</li>
<li>继承的样式没有权值。</li>
<li>!important的权重无限大</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS的预解析]]></title>
        <id>https://danielwongkkk.github.io/post/js-de-yu-jie-xi/</id>
        <link href="https://danielwongkkk.github.io/post/js-de-yu-jie-xi/">
        </link>
        <updated>2020-03-15T08:53:18.000Z</updated>
        <content type="html"><![CDATA[<p>js引擎运行js分为两步：预解析	代码执行</p>
<ol>
<li>预解析：js引擎会把js里面所有的var还有function提升到<strong>当前</strong>作用域的最前面</li>
<li>代码执行：按照代码书写顺序从上往下执行</li>
</ol>
<p>预解析分为：变量预解析（变量提升）和 函数预解析（函数提升）</p>
<ol>
<li>变量提升：所有的变量声明提升至当前作用域的最前面（不提升赋值语句）</li>
<li>函数提升：所有的函数声明提升到当前作用域的最前面（不调用函数，函数表达式不提升）</li>
</ol>
<p><strong>一个案例</strong></p>
<pre><code class="language-JavaScript">var num=10;
fun();
function fun(){
	console.log(num);
	var num=20;
}
//预解析后~
var num;
function fun(){
	var num;
    console.log(num);
    num=20;
} 
num=10;
fun();
//结果是undefined
</code></pre>
<p><strong>一个笔试题</strong></p>
<pre><code class="language-JavaScript">f1();
console.log(c);
console.log(b);
console.log(a);
function f1(){
    var a=b=c=9;//相当于var a=9;b=9;c=9;
    //上面的集体声明是错的，正确应该是：var a=9,b=9,c=9;
    //上面把b,c未声明直接赋值，把b,c变成了全局变量
    //结论：在函数作用域内 加var定义的变量是局部变量，不加var定义的就成了全局变量
    //在ES5的'use strict'模式下，如果变量没有使用var定义，就会报错
    console.log(a);
    console.log(b);
    console.log(c);
}
//预解析后~
function f1(){
    var a；
    a=9;b=9;c=9;
    console.log(a);
    console.log(b);
    console.log(c);
}
f1();
console.log(c);
console.log(b);
console.log(a);
//结果是：9 9 9 9 9 报错
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《穷查理宝典》阅读笔记]]></title>
        <id>https://danielwongkkk.github.io/post/lesslessqiong-cha-li-bao-dian-greatergreater-yue-du-bi-ji/</id>
        <link href="https://danielwongkkk.github.io/post/lesslessqiong-cha-li-bao-dian-greatergreater-yue-du-bi-ji/">
        </link>
        <updated>2020-03-12T08:31:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="查理-芒格简介">查理-芒格简介</h2>
<p><strong>“这些年来，阅读给我带来许许多多的好处”		--查理-芒格</strong></p>
<blockquote>
<p>求学与早期工作</p>
</blockquote>
<p>由于被数学逻辑和推理所吸引，芒格在密歇根大学选择数学专业。</p>
<p>由于二战，他在墨西哥大学学习自然科学和工程学；在加州理工大学学习热力学和气象学。退役后进入了哈佛法学院，并成为那一届的12名优秀毕业生之一。</p>
<p>毕业后进入了一家律师事务所。</p>
<p>在妻子的支持下，芒格进行律师事务所之外的投资，寻求其他的赚钱方法。</p>
<p>在1961年，芒格和一位投资伙伴投资了房地产。两位合伙人投入了10万美元，获得了30万美元的利润。</p>
<blockquote>
<p>与巴菲特相遇</p>
</blockquote>
<p>由于戴维斯医生的引荐，在晚宴上他们相遇。两个相谈甚欢，话题包括商业，金融和历史的诸多方面。</p>
<p>芒格受到了巴菲特的启发，放弃了律师事务所。和一位投资伙伴成立了一家投资公司。</p>
<p>芒格与巴菲特经常交流想法与投资理念，甚至于常常投资同一家公司。</p>
<blockquote>
<p>效仿本杰明-富兰克林</p>
</blockquote>
<p>芒格非常仰慕富兰克林，富兰克林曾出版一本书叫做《穷理查年鉴》，这本《穷查理宝典》则正是为了向它致敬。</p>
<h2 id="给年轻人的建议">给年轻人的建议</h2>
<blockquote>
<p>我把我的剑传给配得上它的人</p>
</blockquote>
<p><strong>“做正确的事情能给个人的品格和事业带来很大的好处”		--查理-芒格</strong></p>
<p>在南加州大学GOULD法学院毕业典礼的演讲中，芒格罗列了使他受益终生的道理和态度。</p>
<ol>
<li><strong>要得到你想要的某样东西，最可靠的方法是让自己配得起它</strong><br>
(这会让你赢得尊敬，也会赢得周围人的信任。能够赢得别人的信任是非常快乐的事情)</li>
<li><strong>正确的爱应该以仰慕为基础</strong></li>
<li><strong>获得智慧是一种道德责任，为此你必须坚持终身学习</strong><br>
(我不断看到有些人在生活中越过越好，他们不是最聪明的，甚至不是最勤奋的，但他们是学习机器；人类社会只有发明了发明的方法之后才能发展， 同样的道理，你们只有学习了学习的方法之后才能进步)</li>
<li><strong>逆向思考</strong><br>
(如果你想过得还不错，不妨想想什么事情会让你的人生变得很糟糕，然后避免这些事情。<br>
就像代数里面的反证法，逆向思考可以帮助我们解决正面思考无法处理的问题)</li>
<li><strong>避免极端强烈的意识形态</strong>(传教士)</li>
<li><strong>自利性偏差</strong><br>
(对自己的成功往往做个人归因，对失败做情景诡异；而对别人的成功倾向于做情景归因，对失败做个人归因)</li>
<li><strong>如果你想说服别人，要诉诸利益，而非诉诸理性</strong><br>
(说服别人，不要说什么‘你的良心会不会过意不去’这种话。更加强调后果对他利益的影响，这样别人才有动力充分考虑你的建议)</li>
<li><strong>避免受到变态的激励机制的驱动</strong><br>
(不要处在一个你们表现得月愚蠢或者越糟糕，它就提供越多回报的变态激励系统中。<br>
变态的激励机制具有控制人类行为的强大力量，人们应该避免受它影响)</li>
<li><strong>违逆的工作关系也应该避免</strong><br>
(你们要特别避免在你们不是真正钦佩或者不想像他一样的人手下干活，那是很危险的，所有人在某种程度上都受到权威人物的控制。尤其是那些为我们提供回报的权威人物，要正确的应对这种危险，必须同时拥有才华和决心。总之，在你们正确的仰慕的人手下工作，在生活中取得的成就将会更加令人满意)</li>
<li><strong>如果你真的想要在某个领域做得很出色，那么你必须对它有强烈的兴趣。</strong><br>
(这样你才会不断的学习新的东西)</li>
</ol>
<h2 id="多元思维模型">多元思维模型</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://danielwongkkk.github.io/post/hello-gridea/</id>
        <link href="https://danielwongkkk.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>